////
// For license information see the LICENSE document
////

package entice.protocol;

import "entice/protocol/EntitySystem.proto";
import "entice/protocol/Util.proto";
import "google/protobuf/csharp_options.proto";


option java_package = "entice.protocol";
option java_outer_classname = "LoginProcess";
option (google.protobuf.csharp_file_options).namespace = "Entice.Protocol";
option (google.protobuf.csharp_file_options).umbrella_classname = "LoginProcess";


message LoginRequest {
  required string email = 1;
  required string password = 2;
  optional string char = 3;
}


message LoginResponse {
  required UID16 accUID = 1;                // UID of the acc object of the current session, or (0,0)
  optional ErrorCode errorcode = 2;         // ID of the error if any occured     
  repeated CharacterStub characters = 3;    // All characters owned by the acc, as entities stubs
  
  enum ErrorCode {
    NONE = 1
    INVALID_CREDENTIALS = 2;                // email, password or character incorrect
    ACC_BANNED = 3;
  }
}


message CharacterStub {
  required Entity = 1                       // Contains this characters local UID, wich will be used
                                            // for identification of the char. Use this when trying to
                                            // dispatch to a gameserver.
  required CharAppearance = 2;
}


service LoginService {                      // TODO can we use this?
  rpc Login (LoginRequest) returns (LoginResponse);
}
